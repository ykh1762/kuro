package kr.or.ddit.admin.controller;

import java.util.List;

import javax.inject.Inject;
import javax.mail.internet.MimeMessage;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.mail.javamail.JavaMailSenderImpl;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.admin.vo.adminMailVO;
import kr.or.ddit.employee.service.IEmpService;
import kr.or.ddit.employee.vo.EmployeeVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/admin")
public class AdminController {

	@Inject
	private IEmpService empSerivce;
	
	@Autowired
	private JavaMailSenderImpl mailSender;
	
	
	@RequestMapping(value = "/home", method = RequestMethod.GET)
	public String admin(Model model) {
		List<EmployeeVO> empList = empSerivce.listAdmin();
		model.addAttribute("empList",empList);
		return "admin/home";
	}
	
	
	@RequestMapping(value = "/register", method = RequestMethod.GET)
	public String registerForm(EmployeeVO empVO,Model model) {
		model.addAttribute("empVO",empVO);
		return "admin/register";
	}
	
	@RequestMapping(value = "/register", method = RequestMethod.POST)
	public String register(@Validated EmployeeVO empVO, Model model) {
		empSerivce.register(empVO);
		return "admin/home";
	}
	
	@ResponseBody
	@RequestMapping(value = "/sendMail", produces = "text/plain; charset=utf-8")
	public ResponseEntity<String> sendMail(@RequestBody adminMailVO adVO, HttpSession session){
		
		EmployeeVO empVO = new EmployeeVO();
		
		String from = "hee822090@gmail.com";
		
		 try {
	            MimeMessage mail = mailSender.createMimeMessage();
	            
	              MimeMessageHelper mailHelper = new MimeMessageHelper(mail,"UTF-8");
	            
	            
	            mailHelper.setFrom(from);
	            // 빈에 아이디 설정한 것은 단순히 smtp 인증을 받기 위해 사용 따라서 보내는이(setFrom())반드시 필요
	            // 보내는이와 메일주소를 수신하는이가 볼때 모두 표기 되게 원하신다면 아래의 코드를 사용하시면 됩니다.
	            //mailHelper.setFrom("보내는이 이름 <보내는이 아이디@도메인주소>");
	            mailHelper.setTo(adVO.getTo());
	            mailHelper.setSubject("쿠로오피스입니다");
	            mailHelper.setText("쿠로오피스 로그인 아이디는 20230005이며, 회원가입 임시비밀번호는 " + empVO.getEmpPw() + "입니다", true);
	            mailSender.send(mail);
	            
	        } catch(Exception e) {
	            e.printStackTrace();
	            return new ResponseEntity<String>("FAILED", HttpStatus.OK);
	        }
	        
	        
	        return new ResponseEntity<String>("SUCCESS", HttpStatus.OK);
		
	}
	
}
