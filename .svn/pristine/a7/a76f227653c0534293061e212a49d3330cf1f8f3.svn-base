package kr.or.ddit.work.controller;

import java.time.LocalDate;
import java.util.Calendar;

import javax.inject.Inject;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import kr.or.ddit.work.service.IWorkService;
import kr.or.ddit.work.vo.WorkVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/work")
public class WorkController {

	@Inject
	private IWorkService workService;
	
	@GetMapping("/home")
	public String home(Model model) {
		
		// 마지막 날짜 구하기
		Calendar cal = Calendar.getInstance();
		int year = cal.get(Calendar.YEAR);
		int month = cal.get(Calendar.MONTH)+1;
		
		LocalDate lastDayDate = LocalDate.of(year, month, 1).
				plusDays(LocalDate.of(year, month, 1).lengthOfMonth()-1);
		
		String lastDayFull = lastDayDate.toString();
		int lastDay = Integer.parseInt(lastDayFull.substring(lastDayFull.length()-2,lastDayFull.length()));
		
		int totalWeek = (int) Math.ceil(lastDay / 7.0);
		int restDayNum = lastDay % 7;
		
		model.addAttribute("totalWeek", totalWeek);
		model.addAttribute("restDayNum", restDayNum);
		return "work/home";
	}
	
	// produce - 헤더의 Accept를 설정
	@ResponseBody
	@RequestMapping(value="/insert", method = RequestMethod.POST, produces = "text/plain;charset=utf-8")
	public ResponseEntity<String> insertWork(@RequestBody WorkVO workVO) {
		
		log.info("data >> " + workVO);
		workVO.setWorkDate(workVO.getWorkDate().replaceAll("-", ""));
		int count = workService.insertWork(workVO);
		
		if (count == 1) {
			return new ResponseEntity<String>("success", HttpStatus.OK);
		} else {
			return new ResponseEntity<String>("fail", HttpStatus.BAD_REQUEST);
		}
		
	}
	
	
	
	
	
	
	
	
}




