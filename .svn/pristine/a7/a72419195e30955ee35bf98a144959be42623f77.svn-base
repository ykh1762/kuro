<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:beans="http://www.springframework.org/schema/beans"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:security="http://www.springframework.org/schema/security" 
   xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
      http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

   <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
   
   <!-- Enables the Spring MVC @Controller programming model -->
   <annotation-driven />

   <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
   <resources mapping="/resources/**" location="/resources/" />

   <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
   <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <beans:property name="prefix" value="/WEB-INF/views/" />
      <beans:property name="suffix" value=".jsp" />
      <beans:property name="order" value="2"/>
   </beans:bean>
   
   <!-- Tiles 설정 시작 -->
   <beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
      <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
      <beans:property name="order" value="1"/>
   </beans:bean>
   
   <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
      <beans:property name="definitions">
         <beans:list>
            <beans:value>/WEB-INF/spring/tiles-config.xml</beans:value>
         </beans:list>
      </beans:property>
   </beans:bean>
   <!-- Tiles 설정 끝 -->
   
   <!-- kr.or.ddit 패키지를 컴포넌트 스캔 대상으로 함. -->
   <context:component-scan base-package="kr.or.ddit" />
   
   <!-- 스프링 시큐리티 애너테이션을 활성화
   - pre-post-annotations="enabled"  -> Controller 특정 메소드에 골뱅이PreAuthorize, 골뱅이 
   PostAuthorize 활성화. *** PreAuthorize : 특정 메소드를 실행하기 전에 role(권한) 체킹
   PostAuthorize : 특정 메소드를 실행한 후에 role(권한) 체킹
   - secured-annotations="enabled" -> 골뱅이Secured를 활성화. -->
<!--     <security:global-method-security pre-post-annotations="enabled" secured-annotations="enabled"/> -->
   
	<!-- file -->
<!-- 	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver"> -->
<!-- 	</beans:bean>    -->
   
<!--    <beans:bean id="noticeDownloadView" class="kr.or.ddit.controller.noticeboard.view.NoticeDownloadView"></beans:bean> -->
   
   
   
   
</beans:beans>






