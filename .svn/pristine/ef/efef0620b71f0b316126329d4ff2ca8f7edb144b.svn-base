package kr.or.ddit.mail.controller;

import java.io.File;
import java.io.OutputStream;
import java.net.URLEncoder;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.io.FileUtils;
import org.apache.commons.lang3.StringUtils;
import org.springframework.web.servlet.View;
import org.springframework.web.servlet.view.AbstractView;

public class MailDownloadView extends AbstractView {

	@Override
	protected void renderMergedOutputModel(Map<String, Object> model, HttpServletRequest request,
			HttpServletResponse response) throws Exception {

		Map<String, Object> mailFileMap = (Map<String, Object>) model.get("mailFileMap");
		
		File saveFile = new File(mailFileMap.get("fileSavepath").toString());
		String filename = mailFileMap.get("fileName").toString();
		String agent = request.getHeader("User-Agent"); // 한글이 깨질 때 이것을 확인해봐야함 
		if(StringUtils.containsIgnoreCase(agent, "msie")) { //if는 must는 아니지만 can이다 
			filename =URLEncoder.encode(filename, "UTF-8");		// IE, Chrome -다운로드할때 인코딩하기 위해서 쓰는 부분
		}else {
			filename = new String(filename.getBytes(), "ISO-8859-1"); // firefox, chrome -위에것이 아니라고하면 
		}
		
		
		response.setHeader("Content-Disposition", "attachment;filename=\""+filename +"\"");
		response.setHeader("Content-Length", mailFileMap.get("fileSize").toString());
		OutputStream os = response.getOutputStream();
		FileUtils.copyFile(saveFile, os);
		
	
	}


}
