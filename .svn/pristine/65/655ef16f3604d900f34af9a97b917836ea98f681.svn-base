package kr.or.ddit.notice.controller;

import java.util.ArrayList;
import java.util.List;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import kr.or.ddit.attfile.vo.AttFileVO;
import kr.or.ddit.comment.service.ICommentService;
import kr.or.ddit.comment.vo.CommentVO;
import kr.or.ddit.common.vo.ComCodeVO;
import kr.or.ddit.employee.vo.EmployeeVO;
import kr.or.ddit.free.vo.FreeVO;
import kr.or.ddit.good.vo.GoodVO;
import kr.or.ddit.notice.service.INoticeService;
import kr.or.ddit.notice.vo.NoticeVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/notice")
public class NoticeController {
	
	@Inject
	private INoticeService noticeService;

	
	@Inject
	private ICommentService commService;
	
	
	@GetMapping("/home")
	public String home(Model model) {
		List<NoticeVO> noticeList = noticeService.getNoticeList();
		model.addAttribute("noticeList",noticeList);
		
		// 각 게시글의 작성자 List<EmployeeVO> 구하기
		List<EmployeeVO> empList = noticeService.getEmpByNoticeList(noticeList);
		model.addAttribute("empList", empList);
				
		// 직급 리스트 posList
		List<ComCodeVO> posList = noticeService.getPosByEmpList(empList);
		model.addAttribute("posList", posList);
				
		// 좋아요 수 구하기.
		List<Integer> goodCountList = noticeService.getGoodByNoticeList(noticeList);
		model.addAttribute("goodCountList", goodCountList);
				
		return "notice/home";
	}


	@RequestMapping(value = "/register", method = RequestMethod.GET)
	public String registerForm(NoticeVO noticeVO, Model model) {
		model.addAttribute("noticeVO",noticeVO);
		return "notice/register";
	}
	
	@RequestMapping(value = "/register", method = RequestMethod.POST)
	public String register(@Validated NoticeVO noticeVO, Model model, HttpServletRequest req) {
		noticeService.register(noticeVO);
		
		// 메인 공지사항에 보이도록 notList 다시 조회 ////
		HttpSession session = req.getSession();
		List<NoticeVO> notList = noticeService.getRecNotList();
		session.setAttribute("notList", notList);
		
		return "redirect:/notice/home";
	}
	
	@RequestMapping(value = "/update",method = RequestMethod.GET)
	public String updateForm(String notCode,Model model) {
		NoticeVO noticeVO = noticeService.getNotice(notCode);
		model.addAttribute("noticeVO",noticeVO);
		return "notice/update";//
	}
	
	// path variable /update/{abc} // ${ } - el태그(jsp)
	//
	@RequestMapping(value = "/update/{notCode}",method = RequestMethod.POST)
	public String update(NoticeVO noticeVO, Model model) {
		noticeService.update(noticeVO);
		return "notice/detail";//
	}
	
	@RequestMapping(value = "/delete", method = RequestMethod.POST)
	public String delete(String notCode,Model model) {
		noticeService.delete(notCode);
		return "redirect:/notice/home";
	}
	
	@RequestMapping(value = "/detail", method =  RequestMethod.GET)
	public String detail(String notCode, Model model) {
		noticeService.incrementHit(notCode);
		NoticeVO noticeVO = noticeService.getNotice(notCode);
		
		model.addAttribute("noticeVO",noticeVO);
		
		EmployeeVO empVO = noticeService.getEmpByNotice(noticeVO);
		model.addAttribute("empVO",empVO);
		
		ComCodeVO ccVO = new ComCodeVO();
		ccVO.setComGroup("EMP_POS");
		ccVO.setComCode(empVO.getEmpPos());
		
		ccVO = noticeService.getCc(ccVO);
		model.addAttribute("ccVO",ccVO);
		
		AttFileVO afVO = new AttFileVO();
		afVO.setAfType("PROFILE");
		afVO.setAfTcode(empVO.getEmpNo());

		afVO = noticeService.getAf(afVO);
		model.addAttribute("afVO",afVO);
		
		List<GoodVO> goodList = new ArrayList<GoodVO>();
		goodList = noticeService.getGood(noticeVO.getNotCode());
		
		if(goodList.size() != 0) {
			model.addAttribute("goodList",goodList);
			
			List<EmployeeVO> empList = noticeService.getEmpByGoodList(goodList);
			model.addAttribute("empList",empList);
			
			List<AttFileVO> afList = noticeService.getAfByEmpList(empList);
			model.addAttribute("afList",afList);
			
			List<ComCodeVO> posList = noticeService.getPosByEmpList(empList);
			model.addAttribute("posList",posList);
			
			List<ComCodeVO> timeList = noticeService.getTimeList(goodList);
			model.addAttribute("timeList",timeList);
		} else {
			model.addAttribute("goodList",null);
		}
		List<CommentVO> CommList = commService.list(notCode);
		model.addAttribute("CommList",CommList);
		
		
		return "notice/detail";
		
	}
}
